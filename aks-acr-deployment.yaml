apiVersion: v1
kind: Service
metadata:
  name: aks-aca
  labels:
    app: aks-aca
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
  selector:
    app: aks-aca
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: aks-aca-ingress
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    kubernetes.io/tls-acme: "true"
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#    cert-manager.io/cluster-issuer: "letsencrypt-prod"
#spec:
#  tls:
#    - hosts:
#        - "aks-aca.azureforeveryone.com"
#      secretName: aks-aca
#  rules:
#    - host: "aks-aca.azureforeveryone.com"
#      http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: aks-aca
#                port: 
#                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-aca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-aca
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: aks-aca
    spec:
      containers:
        - name: aks-aca
          image: "aksacademo.azurecr.io/aks-aca:1.0.0"
          imagePullPolicy: "Always"
          #imagePullSecrets:
          #  - name: the-secret
          ports:
            - containerPort: 80
              name: http
